classdef APA_single_particle
    %UNTITLED Summary of this class goes here
    %   Detailed explanation goes here

    properties
        dt
    end

    methods
        function [predicted_apogee_altitude, predicted_apogee_sigma, obj] = getApogee(obj, x, P, dt)
            T_0 = 260;
            L = 0.0065;

            g = obj.get_gravity(x(1));
            rho = obj.get_density(x(1));
            Cc = 2 * (x(3) - g) / (rho * (x(2) * x(2))); %2.075 should really be 2.0, adapted as correction

            while x(2) > 0 && x(1) < 5000
                g = obj.get_gravity(x(1));
                rho = obj.get_density(x(1));
    
                x(1) = x(1) + x(2) * dt;
                x(2) = x(2) + x(3) * dt;
                
            end

            predicted_apogee_altitude = x(1); %Final value
            predicted_apogee_sigma = 0;
        end

        function rho = get_density(obj, h)
            % Returns atmospheric density as a function of altitude
            % Accurate up to 11km
            % https://en.wikipedia.org/wiki/Density_of_air

            p_0 = 101325; % Standard sea level atmospheric pressure
            M = 0.0289652; % molar mass of dry air
            R = 8.31445; % ideal gas constant
            T_0 = 288.15; % Standard sea level temperature
            L = 0.0065; % temperature lapse rate
            g = obj.get_gravity(h);

            rho = (p_0 * M)/(R * T_0) * (1 - (L * h)/(T_0))^(((-g * M) / (R* L)) - 1); % -g used as g is -ve by default
        end

        function g = get_gravity(obj, h)
            % Returns gravity as a function of altitude
            % Approximates the Earth's gravity assumes a perfect sphere

            g_0 = -9.80665; % Standard gravity
            R_e = 6371000; % Earth radius

            g = g_0 * (R_e / (R_e + h))^2;
        end
    end
end